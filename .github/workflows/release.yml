name: Bump Version and Create Release

on:
  workflow_dispatch:

jobs:
  create-release:
    name: Create Tag & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Install dependencies
        run: npm ci
      - name: Bump Version
        run: npm run bumpVersion:ci
      - name: Format Files
        run: npm run format:fix
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Commit Files
        run: |
          git add -A
          git commit --amend --no-edit
          git tag -f v${{ steps.package-version.outputs.current-version }}
      # TODO update so that bot can push to main, or PR and auto merge to main (look for existing action to help)
      - name: Push changes (manual)
        run: git push origin ${{ github.ref }}
      - name: Push tag (manual)
        run: git push origin v${{ steps.package-version.outputs.current-version }}
      # - name: Push changes (action)
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ${{ github.ref }}
      # - name: Push tag (action)
      #   id: tag_version
      #   uses: mathieudutour/github-tag-action@v6.0
      #   with:
      #     default_bump: false
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     custom_tag: ${{ steps.package-version.outputs.current-version}}
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # prerelease: true
          # draft: true
          generateReleaseNotes: true
          tag: v${{ steps.package-version.outputs.current-version }}
      # Kicking off new dependent jobs clone the original commit (I believe) not the one I just made in this job so version # is out of sync when publishing, for now keep all in one job
      - name: Build All
        run: npm run build:prod
      - run: npm publish dist/libs/core-server --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm publish dist/libs/core-client --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm publish dist/libs/core-client --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm publish dist/libs/constants --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm publish dist/libs/interceptor-react-native-with-reactotron --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm publish dist/libs/interfaces --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm publish dist/libs/utils-logger --access public
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - run: npm publish dist/libs/interceptor-fetch --access public
      #   continue-on-error: true
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - run: npm publish dist/libs/interceptor-react-native --access public
      #   continue-on-error: true
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # build-lib:
  #   needs: create-release
  #   strategy:
  #     matrix:
  #       project: [
  #           'core-client',
  #           'interceptor-react-native-with-reactotron',
  #           'interfaces',
  #           'constants',
  #           'utils-logger',
  #           # 'interceptor-react-native',
  #           # 'interceptor-fetch'
  #         ]
  #   name: Build lib
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Setup Node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #         registry-url: 'https://registry.npmjs.org'
  #     - name: Npm install
  #       run: npm ci
  #     - name: install nx
  #       run: npm i -g nx
  #     - name: Build
  #       run: nx build ${{ matrix.project }}
  #     - name: Publish
  #       run: npm publish dist/libs/${{ matrix.project }} --access public
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  # build-core-server:
  #   needs: create-release
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         registry-url: 'https://registry.npmjs.org'
  #     - run: npm ci
  #     - run: npm run build:prod
  #     - run: npm publish dist/libs/core-server --access public
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
